From 913acb04c0b3a3fce63942ed575418adb24305d2 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Mon, 19 Aug 2013 13:03:28 +0300
Subject: [PATCH] cmhw: USB charging (2/2)

Change-Id: Ia627239addddd45adaf4fc617c6904495660de73

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 835e9e0..b512cc3 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -989,6 +989,10 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
     <string name="gamma_tuning_title_head">Gamma calibration</string>
     <string name="gamma_tuning_summary_head">Tweak gamma values</string>
 
+    <!-- Hardware tunables - USB charging -->
+    <string name="usb_charging_title">USB charging</string>
+    <string name="usb_charging_summary">Charge battery when connected to USB port</string>
+
     <!--  Other device settings -->
     <string name="more_device_controls_title">More\u2026</string>
     <string name="more_device_settings_title">Other device options</string>
diff --git a/res/xml/more_device_settings.xml b/res/xml/more_device_settings.xml
index 4d8ebfe..eccfaa0 100644
--- a/res/xml/more_device_settings.xml
+++ b/res/xml/more_device_settings.xml
@@ -62,4 +62,15 @@
 
     </PreferenceCategory>
 
+    <PreferenceCategory
+        android:key="usb_charging_category"
+        android:title="@string/usb_charging_title" >
+
+        <CheckBoxPreference
+            android:key="usb_charging"
+            android:title="@string/usb_charging_title"
+            android:summary="@string/usb_charging_summary"/>
+
+    </PreferenceCategory>
+
 </PreferenceScreen>
diff --git a/src/com/android/settings/cyanogenmod/BootReceiver.java b/src/com/android/settings/cyanogenmod/BootReceiver.java
index 0cb32f1..2b06a88 100644
--- a/src/com/android/settings/cyanogenmod/BootReceiver.java
+++ b/src/com/android/settings/cyanogenmod/BootReceiver.java
@@ -72,6 +72,7 @@ public class BootReceiver extends BroadcastReceiver {
         DisplayGamma.restore(ctx);
         VibratorIntensity.restore(ctx);
         DisplaySettings.restore(ctx);
+        MoreDeviceSettings.restore(ctx);
     }
 
     private void initFreqCapFiles(Context ctx)
diff --git a/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java b/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
index 1eb8ab5..257421a 100644
--- a/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
+++ b/src/com/android/settings/cyanogenmod/MoreDeviceSettings.java
@@ -18,15 +18,21 @@ package com.android.settings.cyanogenmod;
 
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.Vibrator;
+import android.preference.CheckBoxPreference;
+import android.preference.Preference;
 import android.preference.PreferenceGroup;
+import android.preference.PreferenceManager;
 import android.preference.PreferenceScreen;
 import android.provider.Settings;
 
 import com.android.settings.R;
 import com.android.settings.SettingsPreferenceFragment;
 
+import org.cyanogenmod.hardware.UsbCharging;
+
 public class MoreDeviceSettings extends SettingsPreferenceFragment {
     private static final String TAG = "MoreDeviceSettings";
 
@@ -34,6 +40,10 @@ public class MoreDeviceSettings extends SettingsPreferenceFragment {
     private static final String KEY_DISPLAY_CALIBRATION_CATEGORY = "display_calibration_category";
     private static final String KEY_DISPLAY_COLOR = "color_calibration";
     private static final String KEY_DISPLAY_GAMMA = "gamma_tuning";
+    private static final String KEY_USB_CHARGING_CATEGORY = "usb_charging_category";
+    private static final String KEY_USB_CHARGING = "usb_charging";
+
+    private CheckBoxPreference mUsbCharging;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -60,5 +70,47 @@ public class MoreDeviceSettings extends SettingsPreferenceFragment {
                 calibrationCategory.removePreference(findPreference(KEY_DISPLAY_GAMMA));
             }
         }
+
+        final PreferenceGroup usbChargingCategory =
+                (PreferenceGroup) findPreference(KEY_USB_CHARGING_CATEGORY);
+        mUsbCharging = (CheckBoxPreference) findPreference(KEY_USB_CHARGING);
+
+        if (isUsbChargingSupported()) {
+            mUsbCharging.setChecked(UsbCharging.isEnabled());
+        } else {
+            getPreferenceScreen().removePreference(usbChargingCategory);
+        }
     }
+
+    @Override
+    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
+
+        if (preference == mUsbCharging) {
+            return UsbCharging.setEnabled(mUsbCharging.isChecked());
+        }
+
+        return super.onPreferenceTreeClick(preferenceScreen, preference);
+    }
+
+    /**
+     * Restore the properties associated with this preference on boot
+     * @param context A valid context
+     */
+    public static void restore(Context context) {
+        if (isUsbChargingSupported()) {
+            final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
+            final boolean enabled = prefs.getBoolean(KEY_USB_CHARGING, true);
+            UsbCharging.setEnabled(enabled);
+        }
+    }
+
+    private static boolean isUsbChargingSupported() {
+        try {
+            return UsbCharging.isSupported();
+        } catch (NoClassDefFoundError e) {
+            // Hardware abstraction framework not installed
+            return false;
+        }
+    }
+
 }
